name: POC-17

on:
  push:
    branches: [ "master" ]

jobs: 
  build-deploy: 
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    # Step 1: Checkout the Repo
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Step 3: Cache Maven packages (optional but speeds up builds)
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 4: Build with Maven
    - name: Build with Maven
      run: mvn -B clean verify

    # Step 5: SonarCloud Analysis
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        args: >
          -Dsonar.projectKey=POC-17GitHub-Action
          -Dsonar.organization=banita1985
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    # Step 6: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 7: Build Docker image
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/poc-17:1.0 .

    # Step 8: Trivy Scan on Docker Image
    - name: Trivy Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKER_USERNAME }}/poc-17:1.0
        format: 'table'
        exit-code: '1'   # Fail pipeline if CRITICAL/HIGH vulnerabilities
        severity: 'CRITICAL,HIGH'

    # Step 9: Push Docker Image
    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/poc-17:1.0
