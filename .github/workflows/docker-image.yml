name: POC-17

on:
  push:
    branches: [ "master" ]

jobs: 
  build-deploy: 
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: "https://sonarcloud.io"

    steps:

    # Step 1: Checkout the Repo
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 17 (or 11 depending on your project)
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # Step 4: Build with Maven (skip dependency-check)
    - name: Build with Maven
      run: mvn -B clean verify -Ddependency-check.skip=true

    # step 5: Sonar qube scan
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        projectBaseDir: .
        args: >
          -Dsonar.organization=banita1985
          -Dsonar.projectKey=POC-17GitHub-Action
          -Dsonar.sources=.
          -Dsonar.java.binaries=target/classes

     
    # Step 6: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 7: Build Docker Image
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/poc-17:1.0 .

    # Step 8: Scan Docker Image with Trivy
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: ${{ secrets.DOCKER_USERNAME }}/poc-17:1.0
        format: 'table'
        exit-code: '0'   # don't fail the pipeline if vulnerabilities found
        vuln-type: 'os,library'
